specification TRICKY [PRINT] : noexit
library BOOLEAN endlib
type LOTOS_TYPE is BOOLEAN
sorts
  NSingleton, USingleton, Nat
opns
  _==_, _/=_ : NSingleton, NSingleton -> BOOL
  _==_, _/=_ : USingleton, USingleton -> BOOL
  _==_, _/=_ : Nat, Nat -> BOOL
  Ncons (*! constructor *) : -> NSingleton 
  Ucons (*! constructor *) : Nat -> USingleton 
  d0 (*! constructor *) : -> Nat 
  succ (*! constructor *) : Nat -> Nat 
  d1 : -> Nat 
  d2 : -> Nat 
  d3 : -> Nat 
  f : Nat -> Nat 
eqns
forall
  N : Nat ,
  REC_NSingleton_X, REC_NSingleton_Y : NSingleton,
  REC_USingleton_X, REC_USingleton_Y : USingleton,
  REC_Nat_X, REC_Nat_Y : Nat
ofsort BOOL
  REC_NSingleton_X == REC_NSingleton_X = TRUE;
  (* otherwise *) REC_NSingleton_X == REC_NSingleton_Y = FALSE;
ofsort BOOL
  REC_NSingleton_X /= REC_NSingleton_X = FALSE;
  (* otherwise *) REC_NSingleton_X /= REC_NSingleton_Y = TRUE;
ofsort BOOL
  REC_USingleton_X == REC_USingleton_X = TRUE;
  (* otherwise *) REC_USingleton_X == REC_USingleton_Y = FALSE;
ofsort BOOL
  REC_USingleton_X /= REC_USingleton_X = FALSE;
  (* otherwise *) REC_USingleton_X /= REC_USingleton_Y = TRUE;
ofsort BOOL
  REC_Nat_X == REC_Nat_X = TRUE;
  (* otherwise *) REC_Nat_X == REC_Nat_Y = FALSE;
ofsort BOOL
  REC_Nat_X /= REC_Nat_X = FALSE;
  (* otherwise *) REC_Nat_X /= REC_Nat_Y = TRUE;
ofsort Nat
  d1 = succ (d0);
  d0 == d0 => d2 = d0;
  d0 /= d0 => d3 = d0;
  succ (d0) == d0 => d3 = d0;
  succ (d0) /= d0 => d3 = succ (d0);
  N /= d0 ,  N /= succ (d0) => f (N) = N;
endtype
behaviour
  PRINT !Ncons;
  PRINT !Ucons (d0);
  PRINT !d1;
  PRINT !d2;
  PRINT !d3;
  stop
endspec
