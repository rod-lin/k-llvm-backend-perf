specification EVALTREE [PRINT] : noexit
library BOOLEAN endlib
type LOTOS_TYPE is BOOLEAN
sorts
  Xbool, Pos, Tree, SNat
opns
  _==_, _/=_ : Xbool, Xbool -> BOOL
  _==_, _/=_ : Pos, Pos -> BOOL
  _==_, _/=_ : Tree, Tree -> BOOL
  _==_, _/=_ : SNat, SNat -> BOOL
  Xtrue (*! constructor *) : -> Xbool 
  Xfalse (*! constructor *) : -> Xbool 
  d1 (*! constructor *) : -> Pos 
  cDub (*! constructor *) : Xbool, Pos -> Pos 
  leaf (*! constructor *) : SNat -> Tree 
  node (*! constructor *) : SNat, SNat, Tree, Tree -> Tree 
  Z (*! constructor *) : -> SNat 
  S (*! constructor *) : SNat -> SNat 
  eqBool : Xbool, Xbool -> Xbool 
  and : Xbool, Xbool -> Xbool 
  eqPos : Pos, Pos -> Xbool 
  eq : SNat, SNat -> Xbool 
  f : SNat -> Xbool 
  lambda6 : SNat -> Xbool 
  lambda5 : SNat, Tree -> Tree 
  lambda4 : SNat, Tree, SNat, SNat -> Tree 
  lambda3 : SNat, Tree, Tree -> Tree 
  lambda2 : SNat, Tree, Tree, SNat, SNat -> Tree 
  lambda1 : SNat, Tree, Tree, SNat -> Tree 
  buildtree : SNat, SNat -> Tree 
  lambda0 : SNat, SNat -> SNat 
  succ17 : SNat -> SNat 
  pred17 : SNat -> SNat 
  plus17 : SNat, SNat -> SNat 
  mult17 : SNat, SNat -> SNat 
  exp17 : SNat, SNat -> SNat 
  evaltree17 : SNat -> SNat 
  getval : Tree -> SNat 
  getmax : Tree -> SNat 
  seventeen : -> SNat 
eqns
forall
  b, c : Xbool ,
  p, q : Pos ,
  left, right : Tree ,
  n, o, max : SNat ,
  REC_Xbool_X, REC_Xbool_Y : Xbool,
  REC_Pos_X, REC_Pos_Y : Pos,
  REC_Tree_X, REC_Tree_Y : Tree,
  REC_SNat_X, REC_SNat_Y : SNat
ofsort BOOL
  REC_Xbool_X == REC_Xbool_X = TRUE;
  (* otherwise *) REC_Xbool_X == REC_Xbool_Y = FALSE;
ofsort BOOL
  REC_Xbool_X /= REC_Xbool_X = FALSE;
  (* otherwise *) REC_Xbool_X /= REC_Xbool_Y = TRUE;
ofsort BOOL
  REC_Pos_X == REC_Pos_X = TRUE;
  (* otherwise *) REC_Pos_X == REC_Pos_Y = FALSE;
ofsort BOOL
  REC_Pos_X /= REC_Pos_X = FALSE;
  (* otherwise *) REC_Pos_X /= REC_Pos_Y = TRUE;
ofsort BOOL
  REC_Tree_X == REC_Tree_X = TRUE;
  (* otherwise *) REC_Tree_X == REC_Tree_Y = FALSE;
ofsort BOOL
  REC_Tree_X /= REC_Tree_X = FALSE;
  (* otherwise *) REC_Tree_X /= REC_Tree_Y = TRUE;
ofsort BOOL
  REC_SNat_X == REC_SNat_X = TRUE;
  (* otherwise *) REC_SNat_X == REC_SNat_Y = FALSE;
ofsort BOOL
  REC_SNat_X /= REC_SNat_X = FALSE;
  (* otherwise *) REC_SNat_X /= REC_SNat_Y = TRUE;
ofsort Xbool
  eqBool (Xtrue,b) = b;
  eqBool (Xfalse,Xtrue) = Xfalse;
  eqBool (Xfalse,Xfalse) = Xtrue;
  and (b,Xtrue) = b;
  and (b,Xfalse) = Xfalse;
  eqPos (d1,d1) = Xtrue;
  eqPos (d1,cDub (b,p)) = Xfalse;
  eqPos (cDub (b,p),d1) = Xfalse;
  eqPos (cDub (b,p),cDub (c,q)) = and (eqBool (b,c), eqPos (p,q));
  lambda6 (n) = eq (evaltree17 (n),getval (buildtree (n,Z)));
ofsort Tree
  lambda5 (n,left) = lambda4 (n,left,getmax (left),getval (left));
  lambda4 (n,left,max,o) = lambda3 (o,left,buildtree (n,succ17 (max)));
  lambda3 (n,left,right) = lambda2 (n,left,right,getval (right),getmax (right));
  lambda2 (n,left,right,o,max) = lambda1 (max,left,right,plus17 (n,o));
  lambda1 (max,left,right,n) = node (n,max,left,right);
ofsort SNat
  lambda0 (n,o) = mult17 (n,o);
ofsort Xbool
  eq (Z,Z) = Xtrue;
  eq (Z,S (n)) = Xfalse;
  eq (S (n),Z) = Xfalse;
  eq (S (n),S (o)) = eq (n,o);
ofsort SNat
  eq (n,S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (Z))))))))))))))))) == Xtrue => succ17 (n) = Z;
  eq (n,S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (Z))))))))))))))))) == Xfalse => succ17 (n) = S (n);
  pred17 (Z) = S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (Z))))))))))))))));
  pred17 (S (n)) = n;
  plus17 (n,Z) = n;
  plus17 (n,S (o)) = succ17 (plus17 (n,o));
  mult17 (n,Z) = Z;
  mult17 (n,S (o)) = plus17 (n,mult17 (n,o));
  exp17 (n,Z) = succ17 (Z);
  exp17 (n,S (o)) = mult17 (n,exp17 (n,o));
  evaltree17 (n) = lambda0 (exp17 (S (S (Z)),pred17 (n)),pred17 (exp17 (S (S (Z)),n)));
  getval (leaf (n)) = n;
  getval (node (n,max,left,right)) = n;
  getmax (leaf (n)) = n;
  getmax (node (n,max,left,right)) = max;
ofsort Tree
  buildtree (Z,n) = leaf (n);
  buildtree (S (n),o) = lambda5 (n,buildtree (n,o));
ofsort SNat
  seventeen = S (S (S (S (S ( S (S (S (S (S ( S (S (S (S (S ( S (S (S (S ( Z )))) ))))) ))))) )))));
ofsort Xbool
  f (n) = lambda6 (seventeen);
endtype
behaviour
  PRINT !f (seventeen);
  stop
endspec
