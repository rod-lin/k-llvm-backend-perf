fmod RevNat10000 is
  sorts Nat List .
  op l : Nat List -> List [ctor] .
  op nil : -> List [ctor] .
  op d0 : -> Nat [ctor] .
  op s : Nat -> Nat [ctor] .
  op d10 : -> Nat .
  op plus : Nat Nat -> Nat .
  op times : Nat Nat -> Nat .
  op gen : Nat -> List .
  op conc : List List -> List .
  op rev : List -> List .
  eq d10 = s (s (s (s (s (s (s (s (s (s (d0)))))))))) .
  eq plus (d0, N:Nat) = N:Nat .
  eq plus (s (N:Nat), M:Nat) = s (plus (N:Nat, M:Nat)) .
  eq times (d0, N:Nat) = d0 .
  eq times (s (N:Nat), M:Nat) = plus (M:Nat, times (N:Nat, M:Nat)) .
  eq gen (s (N:Nat)) = l (s (N:Nat), gen (N:Nat)) .
  eq gen (d0) = l (d0, nil) .
  eq conc (l (E:Nat, L1:List), L2:List) = l (E:Nat, conc (L1:List, L2:List)) .
  eq conc (nil, L2:List) = L2:List .
  eq rev (l (E:Nat, L1:List)) = conc (rev (L1:List), l (E:Nat, nil)) .
  eq rev (nil) = nil .
endfm
reduce rev (gen (times (d10, times (d10, times (d10, d10))))) .
quit
