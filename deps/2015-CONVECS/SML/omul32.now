local

datatype xbool = Xfalse | Xtrue

and bit = X0 | X1

and octet = BuildOctet of bit * bit * bit * bit * bit * bit * bit * bit

and octetSum = BuildOctetSum of bit * octet

and half = BuildHalf of octet * octet

and halfSum = BuildHalfSum of bit * half

and block = BuildBlock of octet * octet * octet * octet

and blockSum = BuildBlockSum of bit * block

and pair = BuildPair of block * block ;

in

datatype xbool = Xfalse | Xtrue

and bit = X0 | X1

and octet = BuildOctet of bit * bit * bit * bit * bit * bit * bit * bit

and octetSum = BuildOctetSum of bit * octet

and half = BuildHalf of octet * octet

and halfSum = BuildHalfSum of bit * half

and block = BuildBlock of octet * octet * octet * octet

and blockSum = BuildBlockSum of bit * block

and pair = BuildPair of block * block ;

fun print_Xbool (rec_x:xbool) =
   case rec_x of
   Xfalse => (
      print "Xfalse"
   ) | Xtrue => (
      print "Xtrue"
   )

and print_Bit (rec_x:bit) =
   case rec_x of
   X0 => (
      print "X0"
   ) | X1 => (
      print "X1"
   )

and print_Octet (rec_x:octet) =
   case rec_x of
   BuildOctet (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8) => (
      print "BuildOctet";
      print " (";
      print_Bit rec_x1;
       print ",";
      print_Bit rec_x2;
       print ",";
      print_Bit rec_x3;
       print ",";
      print_Bit rec_x4;
       print ",";
      print_Bit rec_x5;
       print ",";
      print_Bit rec_x6;
       print ",";
      print_Bit rec_x7;
       print ",";
      print_Bit rec_x8;
      print ")"
   )

and print_OctetSum (rec_x:octetSum) =
   case rec_x of
   BuildOctetSum (rec_x1, rec_x2) => (
      print "BuildOctetSum";
      print " (";
      print_Bit rec_x1;
       print ",";
      print_Octet rec_x2;
      print ")"
   )

and print_Half (rec_x:half) =
   case rec_x of
   BuildHalf (rec_x1, rec_x2) => (
      print "BuildHalf";
      print " (";
      print_Octet rec_x1;
       print ",";
      print_Octet rec_x2;
      print ")"
   )

and print_HalfSum (rec_x:halfSum) =
   case rec_x of
   BuildHalfSum (rec_x1, rec_x2) => (
      print "BuildHalfSum";
      print " (";
      print_Bit rec_x1;
       print ",";
      print_Half rec_x2;
      print ")"
   )

and print_Block (rec_x:block) =
   case rec_x of
   BuildBlock (rec_x1, rec_x2, rec_x3, rec_x4) => (
      print "BuildBlock";
      print " (";
      print_Octet rec_x1;
       print ",";
      print_Octet rec_x2;
       print ",";
      print_Octet rec_x3;
       print ",";
      print_Octet rec_x4;
      print ")"
   )

and print_BlockSum (rec_x:blockSum) =
   case rec_x of
   BuildBlockSum (rec_x1, rec_x2) => (
      print "BuildBlockSum";
      print " (";
      print_Bit rec_x1;
       print ",";
      print_Block rec_x2;
      print ")"
   )

and print_Pair (rec_x:pair) =
   case rec_x of
   BuildPair (rec_x1, rec_x2) => (
      print "BuildPair";
      print " (";
      print_Block rec_x1;
       print ",";
      print_Block rec_x2;
      print ")"
   )

fun notBool (rec_x1:xbool) : xbool =
   case (rec_x1) of
     (Xfalse) => Xtrue
   | (Xtrue) => Xfalse

and andBool (rec_x1:xbool, rec_x2:xbool) : xbool =
   case (rec_x1, rec_x2) of
     (Xfalse, l) => Xfalse
   | (Xtrue, l) => l

and orBool (rec_x1:xbool, rec_x2:xbool) : xbool =
   case (rec_x1, rec_x2) of
     (Xfalse, l) => l
   | (Xtrue, l) => Xtrue

and xorBool (rec_x1:xbool, rec_x2:xbool) : xbool =
   case (rec_x1, rec_x2) of
     (Xfalse, l) => l
   | (Xtrue, l) => notBool (l)

and notBit (rec_x1:bit) : bit =
   case (rec_x1) of
     (X0) => X1
   | (X1) => X0

and andBit (rec_x1:bit, rec_x2:bit) : bit =
   case (rec_x1, rec_x2) of
     (b, X0) => X0
   | (b, X1) => b

and orBit (rec_x1:bit, rec_x2:bit) : bit =
   case (rec_x1, rec_x2) of
     (b, X0) => b
   | (b, X1) => X1

and xorBit (rec_x1:bit, rec_x2:bit) : bit =
   case (rec_x1, rec_x2) of
     (b, X0) => b
   | (b, X1) => notBit (b)

fun x00() : octet = BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)

fun x01() : octet = BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)

fun x0000() : half = BuildHalf (x00(), x00())

fun halfU (rec_x1:block) : half =
   case (rec_x1) of
     (BuildBlock (o1, o2, o3, o4)) => BuildHalf (o1, o2)

and halfL (rec_x1:block) : half =
   case (rec_x1) of
     (BuildBlock (o1, o2, o3, o4)) => BuildHalf (o3, o4)

and eqBit (rec_x1:bit, rec_x2:bit) : xbool =
   case (rec_x1, rec_x2) of
     (X0, X0) => Xtrue
   | (X0, X1) => Xfalse
   | (X1, X0) => Xfalse
   | (X1, X1) => Xtrue

and eqOctet (rec_x1:octet, rec_x2:octet) : xbool =
   case (rec_x1, rec_x2) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8), BuildOctet (b_prime1, b_prime2, b_prime3, b_prime4, b_prime5, b_prime6, b_prime7, b_prime8)) => andBool (eqBit (b1, b_prime1), andBool (eqBit (b2, b_prime2), andBool (eqBit (b3, b_prime3), andBool (eqBit (b4, b_prime4), andBool (eqBit (b5, b_prime5), andBool (eqBit (b6, b_prime6), andBool (eqBit (b7, b_prime7), eqBit (b8, b_prime8))))))))

and eqOctetSum (rec_x1:octetSum, rec_x2:octetSum) : xbool =
   case (rec_x1, rec_x2) of
     (BuildOctetSum (b, o), BuildOctetSum (b_prime, o_prime)) => andBool (eqBit (b, b_prime), eqOctet (o, o_prime))

and eqHalf (rec_x1:half, rec_x2:half) : xbool =
   case (rec_x1, rec_x2) of
     (BuildHalf (o1, o2), BuildHalf (o_prime1, o_prime2)) => andBool (eqOctet (o1, o_prime1), eqOctet (o2, o_prime2))

and eqHalfSum (rec_x1:halfSum, rec_x2:halfSum) : xbool =
   case (rec_x1, rec_x2) of
     (BuildHalfSum (b, h), BuildHalfSum (b_prime, h_prime)) => andBool (eqBit (b, b_prime), eqHalf (h, h_prime))

and eqBlock (rec_x1:block, rec_x2:block) : xbool =
   case (rec_x1, rec_x2) of
     (BuildBlock (o1, o2, o3, o4), BuildBlock (o_prime1, o_prime2, o_prime3, o_prime4)) => andBool (andBool (eqOctet (o1, o_prime1), eqOctet (o2, o_prime2)), andBool (eqOctet (o3, o_prime3), eqOctet (o4, o_prime4)))

and eqBlockSum (rec_x1:blockSum, rec_x2:blockSum) : xbool =
   case (rec_x1, rec_x2) of
     (BuildBlockSum (b, w), BuildBlockSum (b_prime, w_prime)) => andBool (eqBit (b, b_prime), eqBlock (w, w_prime))

and eqPair (rec_x1:pair, rec_x2:pair) : xbool =
   case (rec_x1, rec_x2) of
     (BuildPair (w1, w2), BuildPair (w_prime1, w_prime2)) => andBool (eqBlock (w1, w_prime1), eqBlock (w2, w_prime2))

and addBit (rec_x1:bit, rec_x2:bit, rec_x3:bit) : bit =
   case (rec_x1, rec_x2, rec_x3) of
     (b, b_prime, bcarry) => xorBit (xorBit (b, b_prime), bcarry)

and carBit (rec_x1:bit, rec_x2:bit, rec_x3:bit) : bit =
   case (rec_x1, rec_x2, rec_x3) of
     (b, b_prime, bcarry) => orBit (andBit (andBit (b, b_prime), notBit (bcarry)), andBit (orBit (b, b_prime), bcarry))

and addOctetSum (rec_x1:octet, rec_x2:octet, rec_x3:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8), BuildOctet (b_prime1, b_prime2, b_prime3, b_prime4, b_prime5, b_prime6, b_prime7, b_prime8), bcarry) => addOctet8 (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, b6, b_prime6, b7, b_prime7, b8, b_prime8, bcarry)

and addOctet8 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit, rec_x12:bit, rec_x13:bit, rec_x14:bit, rec_x15:bit, rec_x16:bit, rec_x17:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16, rec_x17) of
     (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, b6, b_prime6, b7, b_prime7, b8, b_prime8, bcarry) => addOctet7 (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, b6, b_prime6, b7, b_prime7, carBit (b8, b_prime8, bcarry), addBit (b8, b_prime8, bcarry))

and addOctet7 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit, rec_x12:bit, rec_x13:bit, rec_x14:bit, rec_x15:bit, rec_x16:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16) of
     (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, b6, b_prime6, b7, b_prime7, bcarry, b_second8) => addOctet6 (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, b6, b_prime6, carBit (b7, b_prime7, bcarry), addBit (b7, b_prime7, bcarry), b_second8)

and addOctet6 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit, rec_x12:bit, rec_x13:bit, rec_x14:bit, rec_x15:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15) of
     (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, b6, b_prime6, bcarry, b_second7, b_second8) => addOctet5 (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, carBit (b6, b_prime6, bcarry), addBit (b6, b_prime6, bcarry), b_second7, b_second8)

and addOctet5 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit, rec_x12:bit, rec_x13:bit, rec_x14:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14) of
     (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, b5, b_prime5, bcarry, b_second6, b_second7, b_second8) => addOctet4 (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, carBit (b5, b_prime5, bcarry), addBit (b5, b_prime5, bcarry), b_second6, b_second7, b_second8)

and addOctet4 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit, rec_x12:bit, rec_x13:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13) of
     (b1, b_prime1, b2, b_prime2, b3, b_prime3, b4, b_prime4, bcarry, b_second5, b_second6, b_second7, b_second8) => addOctet3 (b1, b_prime1, b2, b_prime2, b3, b_prime3, carBit (b4, b_prime4, bcarry), addBit (b4, b_prime4, bcarry), b_second5, b_second6, b_second7, b_second8)

and addOctet3 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit, rec_x12:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12) of
     (b1, b_prime1, b2, b_prime2, b3, b_prime3, bcarry, b_second4, b_second5, b_second6, b_second7, b_second8) => addOctet2 (b1, b_prime1, b2, b_prime2, carBit (b3, b_prime3, bcarry), addBit (b3, b_prime3, bcarry), b_second4, b_second5, b_second6, b_second7, b_second8)

and addOctet2 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit, rec_x11:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11) of
     (b1, b_prime1, b2, b_prime2, bcarry, b_second3, b_second4, b_second5, b_second6, b_second7, b_second8) => addOctet1 (b1, b_prime1, carBit (b2, b_prime2, bcarry), addBit (b2, b_prime2, bcarry), b_second3, b_second4, b_second5, b_second6, b_second7, b_second8)

and addOctet1 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit, rec_x10:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10) of
     (b1, b_prime1, bcarry, b_second2, b_second3, b_second4, b_second5, b_second6, b_second7, b_second8) => addOctet0 (carBit (b1, b_prime1, bcarry), addBit (b1, b_prime1, bcarry), b_second2, b_second3, b_second4, b_second5, b_second6, b_second7, b_second8)

and addOctet0 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:bit) : octetSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9) of
     (bcarry, b_second1, b_second2, b_second3, b_second4, b_second5, b_second6, b_second7, b_second8) => BuildOctetSum (bcarry, BuildOctet (b_second1, b_second2, b_second3, b_second4, b_second5, b_second6, b_second7, b_second8))

and dropCarryOctetSum (rec_x1:octetSum) : octet =
   case (rec_x1) of
     (BuildOctetSum (bcarry, o)) => o

and addOctet (rec_x1:octet, rec_x2:octet) : octet =
   case (rec_x1, rec_x2) of
     (o, o_prime) => dropCarryOctetSum (addOctetSum (o, o_prime, X0))

and addHalfSum (rec_x1:half, rec_x2:half) : halfSum =
   case (rec_x1, rec_x2) of
     (BuildHalf (o1, o2), BuildHalf (o_prime1, o_prime2)) => addHalf2 (o1, o_prime1, o2, o_prime2)

and addHalf2 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet) : halfSum =
   case (rec_x1, rec_x2, rec_x3, rec_x4) of
     (o1, o_prime1, o2, o_prime2) => addHalf1 (o1, o_prime1, addOctetSum (o2, o_prime2, X0))

and addHalf1 (rec_x1:octet, rec_x2:octet, rec_x3:octetSum) : halfSum =
   case (rec_x1, rec_x2, rec_x3) of
     (o1, o_prime1, BuildOctetSum (b, o_second2)) => addHalf0 (addOctetSum (o1, o_prime1, b), o_second2)

and addHalf0 (rec_x1:octetSum, rec_x2:octet) : halfSum =
   case (rec_x1, rec_x2) of
     (BuildOctetSum (b, o_second1), o_second2) => BuildHalfSum (b, BuildHalf (o_second1, o_second2))

and dropCarryHalfSum (rec_x1:halfSum) : half =
   case (rec_x1) of
     (BuildHalfSum (b, h)) => h

and addHalf (rec_x1:half, rec_x2:half) : half =
   case (rec_x1, rec_x2) of
     (h, h_prime) => dropCarryHalfSum (addHalfSum (h, h_prime))

and addHalfOctet (rec_x1:octet, rec_x2:half) : half =
   case (rec_x1, rec_x2) of
     (o, h) => addHalf (BuildHalf (x00(), o), h)

and addHalfOctets (rec_x1:octet, rec_x2:octet) : half =
   case (rec_x1, rec_x2) of
     (o, o_prime) => addHalf (BuildHalf (x00(), o), BuildHalf (x00(), o_prime))

and leftOctet1 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b2, b3, b4, b5, b6, b7, b8, X0)

and leftOctet2 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b3, b4, b5, b6, b7, b8, X0, X0)

and leftOctet3 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b4, b5, b6, b7, b8, X0, X0, X0)

and leftOctet4 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b5, b6, b7, b8, X0, X0, X0, X0)

and leftOctet5 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b6, b7, b8, X0, X0, X0, X0, X0)

and leftOctet6 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b7, b8, X0, X0, X0, X0, X0, X0)

and leftOctet7 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (b8, X0, X0, X0, X0, X0, X0, X0)

and rightOctet1 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, b1, b2, b3, b4, b5, b6, b7)

and rightOctet2 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, X0, b1, b2, b3, b4, b5, b6)

and rightOctet3 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, X0, X0, b1, b2, b3, b4, b5)

and rightOctet4 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, X0, X0, X0, b1, b2, b3, b4)

and rightOctet5 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, X0, X0, X0, X0, b1, b2, b3)

and rightOctet6 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, X0, X0, X0, X0, X0, b1, b2)

and rightOctet7 (rec_x1:octet) : octet =
   case (rec_x1) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8)) => BuildOctet (X0, X0, X0, X0, X0, X0, X0, b1)

and mulOctet (rec_x1:octet, rec_x2:octet) : half =
   case (rec_x1, rec_x2) of
     (BuildOctet (b1, b2, b3, b4, b5, b6, b7, b8), o_prime) => mulOctet1 (b1, b2, b3, b4, b5, b6, b7, b8, o_prime, x0000())

and mulOctet1 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:bit, rec_x9:octet, rec_x10:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10) of
     (X0, b2, b3, b4, b5, b6, b7, b8, o_prime, h) => mulOctet2 (b2, b3, b4, b5, b6, b7, b8, o_prime, h)
   | (X1, b2, b3, b4, b5, b6, b7, b8, o_prime, h) => mulOctet2 (b2, b3, b4, b5, b6, b7, b8, o_prime, mulOctetA (h, rightOctet1 (o_prime), leftOctet7 (o_prime)))

and mulOctet2 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:bit, rec_x8:octet, rec_x9:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9) of
     (X0, b3, b4, b5, b6, b7, b8, o_prime, h) => mulOctet3 (b3, b4, b5, b6, b7, b8, o_prime, h)
   | (X1, b3, b4, b5, b6, b7, b8, o_prime, h) => mulOctet3 (b3, b4, b5, b6, b7, b8, o_prime, mulOctetA (h, rightOctet2 (o_prime), leftOctet6 (o_prime)))

and mulOctet3 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:bit, rec_x7:octet, rec_x8:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8) of
     (X0, b4, b5, b6, b7, b8, o_prime, h) => mulOctet4 (b4, b5, b6, b7, b8, o_prime, h)
   | (X1, b4, b5, b6, b7, b8, o_prime, h) => mulOctet4 (b4, b5, b6, b7, b8, o_prime, mulOctetA (h, rightOctet3 (o_prime), leftOctet5 (o_prime)))

and mulOctet4 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:bit, rec_x6:octet, rec_x7:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7) of
     (X0, b5, b6, b7, b8, o_prime, h) => mulOctet5 (b5, b6, b7, b8, o_prime, h)
   | (X1, b5, b6, b7, b8, o_prime, h) => mulOctet5 (b5, b6, b7, b8, o_prime, mulOctetA (h, rightOctet4 (o_prime), leftOctet4 (o_prime)))

and mulOctet5 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:bit, rec_x5:octet, rec_x6:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6) of
     (X0, b6, b7, b8, o_prime, h) => mulOctet6 (b6, b7, b8, o_prime, h)
   | (X1, b6, b7, b8, o_prime, h) => mulOctet6 (b6, b7, b8, o_prime, mulOctetA (h, rightOctet5 (o_prime), leftOctet3 (o_prime)))

and mulOctet6 (rec_x1:bit, rec_x2:bit, rec_x3:bit, rec_x4:octet, rec_x5:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5) of
     (X0, b7, b8, o_prime, h) => mulOctet7 (b7, b8, o_prime, h)
   | (X1, b7, b8, o_prime, h) => mulOctet7 (b7, b8, o_prime, mulOctetA (h, rightOctet6 (o_prime), leftOctet2 (o_prime)))

and mulOctet7 (rec_x1:bit, rec_x2:bit, rec_x3:octet, rec_x4:half) : half =
   case (rec_x1, rec_x2, rec_x3, rec_x4) of
     (X0, b8, o_prime, h) => mulOctet8 (b8, o_prime, h)
   | (X1, b8, o_prime, h) => mulOctet8 (b8, o_prime, mulOctetA (h, rightOctet7 (o_prime), leftOctet1 (o_prime)))

and mulOctet8 (rec_x1:bit, rec_x2:octet, rec_x3:half) : half =
   case (rec_x1, rec_x2, rec_x3) of
     (X0, o_prime, h) => h
   | (X1, o_prime, h) => mulOctetA (h, x00(), o_prime)

and mulOctetA (rec_x1:half, rec_x2:octet, rec_x3:octet) : half =
   case (rec_x1, rec_x2, rec_x3) of
     (BuildHalf (o1, o2), o_prime1, o_prime2) => mulOctetB (addOctet (o1, o_prime1), addOctetSum (o2, o_prime2, X0))

and mulOctetB (rec_x1:octet, rec_x2:octetSum) : half =
   case (rec_x1, rec_x2) of
     (o1, BuildOctetSum (X0, o2)) => BuildHalf (o1, o2)
   | (o1, BuildOctetSum (X1, o2)) => BuildHalf (addOctet (o1, x01()), o2)

and mulBlock (rec_x1:block, rec_x2:block) : pair =
   case (rec_x1, rec_x2) of
     (BuildBlock (o1, o2, o3, o4), BuildBlock (o_prime1, o_prime2, o_prime3, o_prime4)) => mulBlock0 (mulOctet (o1, o_prime1), mulOctet (o1, o_prime2), mulOctet (o1, o_prime3), mulOctet (o1, o_prime4), mulOctet (o2, o_prime1), mulOctet (o2, o_prime2), mulOctet (o2, o_prime3), mulOctet (o2, o_prime4), mulOctet (o3, o_prime1), mulOctet (o3, o_prime2), mulOctet (o3, o_prime3), mulOctet (o3, o_prime4), mulOctet (o4, o_prime1), mulOctet (o4, o_prime2), mulOctet (o4, o_prime3), mulOctet (o4, o_prime4))

and mulBlock0 (rec_x1:half, rec_x2:half, rec_x3:half, rec_x4:half, rec_x5:half, rec_x6:half, rec_x7:half, rec_x8:half, rec_x9:half, rec_x10:half, rec_x11:half, rec_x12:half, rec_x13:half, rec_x14:half, rec_x15:half, rec_x16:half) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16) of
     (BuildHalf (o11high, o11low), BuildHalf (o12high, o12low), BuildHalf (o13high, o13low), BuildHalf (o14high, o14low), BuildHalf (o21high, o21low), BuildHalf (o22high, o22low), BuildHalf (o23high, o23low), BuildHalf (o24high, o24low), BuildHalf (o31high, o31low), BuildHalf (o32high, o32low), BuildHalf (o33high, o33low), BuildHalf (o34high, o34low), BuildHalf (o41high, o41low), BuildHalf (o42high, o42low), BuildHalf (o43high, o43low), BuildHalf (o44high, o44low)) => mulBlock8 (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o14low, o21high, o21low, o22high, o22low, o23high, o23low, o24high, o24low, o31high, o31low, o32high, o32low, o33high, o33low, o34high, o34low, o41high, o41low, o42high, o42low, o43high, o43low, o44high, o44low)

and mulBlock8 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet, rec_x9:octet, rec_x10:octet, rec_x11:octet, rec_x12:octet, rec_x13:octet, rec_x14:octet, rec_x15:octet, rec_x16:octet, rec_x17:octet, rec_x18:octet, rec_x19:octet, rec_x20:octet, rec_x21:octet, rec_x22:octet, rec_x23:octet, rec_x24:octet, rec_x25:octet, rec_x26:octet, rec_x27:octet, rec_x28:octet, rec_x29:octet, rec_x30:octet, rec_x31:octet, rec_x32:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16, rec_x17, rec_x18, rec_x19, rec_x20, rec_x21, rec_x22, rec_x23, rec_x24, rec_x25, rec_x26, rec_x27, rec_x28, rec_x29, rec_x30, rec_x31, rec_x32) of
     (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o14low, o21high, o21low, o22high, o22low, o23high, o23low, o24high, o24low, o31high, o31low, o32high, o32low, o33high, o33low, o34high, o34low, o41high, o41low, o42high, o42low, o43high, o43low, o44high, o8) => mulBlock7 (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o14low, o21high, o21low, o22high, o22low, o23high, o23low, o24high, o24low, o31high, o31low, o32high, o32low, o33high, o33low, o34high, o41high, o41low, o42high, o42low, o43high, addHalfOctet (o44high, addHalfOctets (o34low, o43low)), o8)

and mulBlock7 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet, rec_x9:octet, rec_x10:octet, rec_x11:octet, rec_x12:octet, rec_x13:octet, rec_x14:octet, rec_x15:octet, rec_x16:octet, rec_x17:octet, rec_x18:octet, rec_x19:octet, rec_x20:octet, rec_x21:octet, rec_x22:octet, rec_x23:octet, rec_x24:octet, rec_x25:octet, rec_x26:octet, rec_x27:octet, rec_x28:octet, rec_x29:half, rec_x30:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16, rec_x17, rec_x18, rec_x19, rec_x20, rec_x21, rec_x22, rec_x23, rec_x24, rec_x25, rec_x26, rec_x27, rec_x28, rec_x29, rec_x30) of
     (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o14low, o21high, o21low, o22high, o22low, o23high, o23low, o24high, o24low, o31high, o31low, o32high, o32low, o33high, o33low, o34high, o41high, o41low, o42high, o42low, o43high, BuildHalf (ocarry, o7), o8) => mulBlock6 (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o14low, o21high, o21low, o22high, o22low, o23high, o23low, o24high, o31high, o31low, o32high, o32low, o33high, o41high, o41low, o42high, addHalfOctet (ocarry, addHalfOctet (o34high, addHalfOctet (o43high, addHalfOctet (o24low, addHalfOctets (o33low, o42low))))), o7, o8)

and mulBlock6 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet, rec_x9:octet, rec_x10:octet, rec_x11:octet, rec_x12:octet, rec_x13:octet, rec_x14:octet, rec_x15:octet, rec_x16:octet, rec_x17:octet, rec_x18:octet, rec_x19:octet, rec_x20:octet, rec_x21:octet, rec_x22:octet, rec_x23:octet, rec_x24:half, rec_x25:octet, rec_x26:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16, rec_x17, rec_x18, rec_x19, rec_x20, rec_x21, rec_x22, rec_x23, rec_x24, rec_x25, rec_x26) of
     (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o14low, o21high, o21low, o22high, o22low, o23high, o23low, o24high, o31high, o31low, o32high, o32low, o33high, o41high, o41low, o42high, BuildHalf (ocarry, o6), o7, o8) => mulBlock5 (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o21high, o21low, o22high, o22low, o23high, o31high, o31low, o32high, o41high, addHalfOctet (ocarry, addHalfOctet (o24high, addHalfOctet (o33high, addHalfOctet (o42high, addHalfOctet (o14low, addHalfOctet (o23low, addHalfOctets (o32low, o41low))))))), o6, o7, o8)

and mulBlock5 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet, rec_x9:octet, rec_x10:octet, rec_x11:octet, rec_x12:octet, rec_x13:octet, rec_x14:octet, rec_x15:octet, rec_x16:octet, rec_x17:half, rec_x18:octet, rec_x19:octet, rec_x20:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14, rec_x15, rec_x16, rec_x17, rec_x18, rec_x19, rec_x20) of
     (o11high, o11low, o12high, o12low, o13high, o13low, o14high, o21high, o21low, o22high, o22low, o23high, o31high, o31low, o32high, o41high, BuildHalf (ocarry, o5), o6, o7, o8) => mulBlock4 (o11high, o11low, o12high, o12low, o13high, o21high, o21low, o22high, o31high, addHalfOctet (ocarry, addHalfOctet (o14high, addHalfOctet (o23high, addHalfOctet (o32high, addHalfOctet (o41high, addHalfOctet (o13low, addHalfOctets (o22low, o31low))))))), o5, o6, o7, o8)

and mulBlock4 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet, rec_x9:octet, rec_x10:half, rec_x11:octet, rec_x12:octet, rec_x13:octet, rec_x14:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10, rec_x11, rec_x12, rec_x13, rec_x14) of
     (o11high, o11low, o12high, o12low, o13high, o21high, o21low, o22high, o31high, BuildHalf (ocarry, o4), o5, o6, o7, o8) => mulBlock3 (o11high, o11low, o12high, o21high, addHalfOctet (ocarry, addHalfOctet (o13high, addHalfOctet (o22high, addHalfOctet (o31high, addHalfOctets (o12low, o21low))))), o4, o5, o6, o7, o8)

and mulBlock3 (rec_x1:octet, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:half, rec_x6:octet, rec_x7:octet, rec_x8:octet, rec_x9:octet, rec_x10:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8, rec_x9, rec_x10) of
     (o11high, o11low, o12high, o21high, BuildHalf (ocarry, o3), o4, o5, o6, o7, o8) => mulBlock2 (o11high, addHalfOctet (ocarry, addHalfOctet (o12high, addHalfOctets (o21high, o11low))), o3, o4, o5, o6, o7, o8)

and mulBlock2 (rec_x1:octet, rec_x2:half, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8) of
     (o11high, BuildHalf (ocarry, o2), o3, o4, o5, o6, o7, o8) => mulBlock1 (addHalfOctets (ocarry, o11high), o2, o3, o4, o5, o6, o7, o8)

and mulBlock1 (rec_x1:half, rec_x2:octet, rec_x3:octet, rec_x4:octet, rec_x5:octet, rec_x6:octet, rec_x7:octet, rec_x8:octet) : pair =
   case (rec_x1, rec_x2, rec_x3, rec_x4, rec_x5, rec_x6, rec_x7, rec_x8) of
     (BuildHalf (ocarry, o1), o2, o3, o4, o5, o6, o7, o8) => BuildPair (BuildBlock (o1, o2, o3, o4), BuildBlock (o5, o6, o7, o8))

and testMulBlock (rec_x1:block, rec_x2:block, rec_x3:block, rec_x4:block) : xbool =
   case (rec_x1, rec_x2, rec_x3, rec_x4) of
     (w, w_prime, w1, w2) => andBool (eqPair (mulBlock (w, w_prime), BuildPair (w1, w2)), eqPair (mulBlock (w_prime, w), BuildPair (w1, w2)))

fun x02() : octet = BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)

fun x21() : octet = BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)

fun x38() : octet = BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)

fun x54() : octet = BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)

fun x55() : octet = BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)

fun x5F() : octet = BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)

fun x6B() : octet = BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)

fun x7D() : octet = BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)

fun x88() : octet = BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)

fun x89() : octet = BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)

fun x8C() : octet = BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)

fun xAB() : octet = BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)

fun xBC() : octet = BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)

fun xC0() : octet = BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)

fun xC1() : octet = BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)

fun xCC() : octet = BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)

fun xD6() : octet = BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)

fun xFF() : octet = BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)

fun main () = (
   print_Xbool (testMulBlock (BuildBlock (xCC(), xFF(), x38(), x6B()), BuildBlock (xAB(), xC0(), x54(), x02()), BuildBlock (x89(), x88(), x7D(), x5F()), BuildBlock (x21(), xC1(), x8C(), xD6())));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X0, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X0, X1)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X0, X1, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X0, X1, X0), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X0, X1, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X0, X1, X1, X0, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X1)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X1, X1, X1, X0, X0), BuildOctet (X0, X0, X1, X0, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X0, X1, X0, X0, X1, X0, X1), BuildOctet (X0, X0, X1, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X1, X0), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X0, X1, X1, X0, X1, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X0, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X0, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X1, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X1, X1, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X1, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X0, X0, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1)), BuildBlock (BuildOctet (X1, X1, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X0, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X0, X0, X0, X1, X1, X0), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X0, X1, X0, X0), BuildOctet (X1, X0, X0, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X1, X1, X1, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X1, X0), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X0, X1, X1, X0, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X1, X1, X1, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X1, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X0, X1, X1, X1, X0), BuildOctet (X1, X0, X0, X1, X0, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X0, X1, X1, X1, X1, X1, X1), BuildOctet (X1, X1, X0, X1, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X1, X0, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X1, X0, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X0, X0, X1, X1), BuildOctet (X1, X0, X0, X0, X1, X0, X0, X0), BuildOctet (X1, X1, X1, X0, X0, X1, X1, X1), BuildOctet (X1, X0, X1, X1, X0, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X1, X0, X1, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X0, X0, X0), BuildOctet (X1, X0, X0, X0, X0, X0, X0, X1), BuildOctet (X0, X1, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X1, X0, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X0, X1, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X1, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   print_Xbool (testMulBlock (BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X0, X1, X0, X1, X0, X1, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X1, X0), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X0), BuildOctet (X1, X1, X1, X1, X1, X1, X1, X1), BuildOctet (X0, X1, X1, X0, X0, X1, X1, X1)), BuildBlock (BuildOctet (X1, X1, X1, X1, X1, X1, X0, X1), BuildOctet (X0, X1, X1, X1, X1, X0, X0, X1), BuildOctet (X1, X0, X0, X1, X1, X0, X0, X0), BuildOctet (X0, X1, X0, X1, X0, X1, X1, X0)), BuildBlock (BuildOctet (X1, X1, X0, X0, X1, X0, X1, X1), BuildOctet (X1, X1, X0, X0, X1, X1, X0, X1), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0), BuildOctet (X0, X0, X0, X0, X0, X0, X0, X0))));
   print "\n";
   OS.Process.exit (OS.Process.success)
)

val _ = main ()

end
