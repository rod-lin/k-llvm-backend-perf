
% definition of usual operations on machine words - H. Garavel 2016

   notBool (false) -> true
   notBool (true) -> false

   andBool (false, L) -> false
   andBool (true, L) -> L

   orBool (false, L) -> L
   orBool (true, L) -> true

   xorBool (false, L) -> L
   xorBool (true, L) -> notBool (L)

% ----------------------------------------------------------------------------

   notBit (x0) -> x1
   notBit (x1) -> x0

   andBit (B, x0) -> x0
   andBit (B, x1) -> B

   orBit (B, x0) -> B
   orBit (B, x1) -> x1

   xorBit (B, x0) -> B
   xorBit (B, x1) -> notBit (B)

% ----------------------------------------------------------------------------

   x00 -> buildOctet (x0, x0, x0, x0, x0, x0, x0, x0)
   x01 -> buildOctet (x0, x0, x0, x0, x0, x0, x0, x1)

% ----------------------------------------------------------------------------

   x0000 -> buildHalf (x00, x00)

% ----------------------------------------------------------------------------

   HalfU (buildBlock (O1, O2, O3, O4)) -> buildHalf (O1, O2)
   HalfL (buildBlock (O1, O2, O3, O4)) -> buildHalf (O3, O4)

% ----------------------------------------------------------------------------

   eqBit (x0, x0) -> true
   eqBit (x0, x1) -> false
   eqBit (x1, x0) -> false
   eqBit (x1, x1) -> true

   eqOctet (buildOctet (B1, B2, B3, B4, B5, B6, B7, B8), buildOctet (B'1, B'2, B'3, B'4, B'5, B'6, B'7, B'8)) -> andBool (eqBit (B1, B'1), andBool (eqBit (B2, B'2), andBool (eqBit (B3, B'3), andBool (eqBit (B4, B'4), andBool (eqBit (B5, B'5), andBool (eqBit (B6, B'6), andBool (eqBit (B7, B'7), eqBit (B8, B'8))))))))

   eqOctetSum (buildOctetSum (B, O), buildOctetSum (B', O')) -> andBool (eqBit (B, B'), eqOctet (O, O'))

   eqHalf (buildHalf (O1, O2), buildHalf (O'1, O'2)) -> andBool (eqOctet (O1, O'1), eqOctet (O2, O'2))

   eqHalfSum (buildHalfSum (B, H), buildHalfSum (B', H')) -> andBool (eqBit (B, B'), eqHalf (H, H'))
 
   eqBlock (buildBlock (O1, O2, O3, O4), buildBlock (O'1, O'2, O'3, O'4)) -> andBool (andBool (eqOctet (O1, O'1), eqOctet (O2, O'2)), andBool (eqOctet (O3, O'3), eqOctet (O4, O'4)))

   eqBlockSum (buildBlockSum (B, W), buildBlockSum (B', W')) -> andBool (eqBit (B, B'), eqBlock (W, W'))

   eqPair (buildPair (W1, W2), buildPair (W'1, W'2)) -> andBool (eqBlock (W1, W'1), eqBlock (W2, W'2))
