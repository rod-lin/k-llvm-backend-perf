module GarbageCollection is

type Xnat is 
   d0,
   s (rec_x1_1:Xnat),
   p,
   n
with "==", "!="
end type

function d1 : Xnat is
   return s (d0)
end function

function c (rec_x1:Xnat, rec_x2:Xnat) : Xnat is
   case rec_x1, rec_x2 in
   var X:Xnat, Y:Xnat in
     d0, Y -> return Y
   | s (X), Y -> return s (c (X,Y))
   end case
end function

function f (rec_x1:Xnat, rec_x2:Xnat, rec_x3:Xnat, rec_x4:Xnat, rec_x5:Xnat) : Xnat is
   case rec_x1, rec_x2, rec_x3, rec_x4, rec_x5 in
   var T:Xnat, U:Xnat, X:Xnat, Y:Xnat, Z:Xnat in
     X, Y, s (Z), T, U -> return f (X, Y, Z, c (T, T), U)
   | X, s (Y), d0, T, U -> return f (X, Y, p, T, T)
   | s (X), d0, d0, T, U -> return f (X, n, p, d1, d0)
   | d0, d0, d0, T, U -> return T
   | X, s (Y), p, T, U -> return f (X, Y, p, T, s (U))
   | X, d0, p, T, U -> return f (X, n, p, s (T), U)
   | s (X), n, p, T, U -> return f (X, n, p, T, U)
   | d0, n, p, T, U -> return U
   end case
end function

process MAIN [PRINT:any] is
   PRINT (f (s (s (s (s (s (s (d0)))))), s (s (s (s (s (d0))))), s (s (d0)), d0, d1));
   PRINT (f (s (s (s (s (d0)))), s (s (s (d0))), s (s (s (s (s (d0))))), d0, d1));
   stop
end process

end module
