(VAR b c p q l m n o r t)
(RULES
 eqBool (true,b) -> b
 eqBool (false,true) -> false
 eqBool (false,false) -> true
 and (b,true) -> b
 and (b,false) -> false
 eqPos (d1,d1) -> true
 eqPos (d1,cDub (b,p)) -> false
 eqPos (cDub (b,p),d1) -> false
 eqPos (cDub (b,p),cDub (c,q)) -> and (eqBool (b,c), eqPos (p,q))
 lambda0 (m) -> eq (eval17 (m),evalsym17 (m))
 eq (Z,Z) -> true
 eq (Z,S (r)) -> false
 eq (S (r),Z) -> false
 eq (S (r),S (t)) -> eq (r,t)
 succ17 (r) -> Z | REC_EqBool (eq (r,S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (Z))))))))))))))))), true) -> REC_True
 succ17 (r) -> S (r) | REC_EqBool (eq (r,S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (Z))))))))))))))))), false) -> REC_True
 plus17 (r,Z) -> r
 plus17 (r,S (t)) -> succ17 (plus17 (r,t))
 mult17 (r,Z) -> Z
 mult17 (r,S (t)) -> plus17 (r,mult17 (r,t))
 exp17 (r,Z) -> succ17 (Z)
 exp17 (r,S (t)) -> mult17 (r,exp17 (r,t))
 eval17 (Exz) -> Z
 eval17 (Exs (n)) -> succ17 (eval17 (n))
 eval17 (Explus (n,m)) -> plus17 (eval17 (n),eval17 (m))
 eval17 (Exmult (n,m)) -> mult17 (eval17 (n),eval17 (m))
 eval17 (Exexp (n,m)) -> exp17 (eval17 (n),eval17 (m))
 evalsym17 (Exz) -> Z
 evalsym17 (Exs (n)) -> succ17 (evalsym17 (n))
 evalsym17 (Explus (n,m)) -> plus17 (evalsym17 (n),evalsym17 (m))
 evalsym17 (Exmult (n,Exz)) -> Z
 evalsym17 (Exmult (n,Exs (m))) -> evalsym17 (Explus (Exmult (n,m),n))
 evalsym17 (Exmult (n,Explus (m,o))) -> evalsym17 (Explus (Exmult (n,m),Exmult (n,o)))
 evalsym17 (Exmult (n,Exmult (m,o))) -> evalsym17 (Exmult (Exmult (n,m),o))
 evalsym17 (Exmult (n,Exexp (m,o))) -> evalsym17 (Exmult (n,dec (Exexp (m,o))))
 evalsym17 (Exexp (n,Exz)) -> succ17 (Z)
 evalsym17 (Exexp (n,Exs (m))) -> evalsym17 (Exmult (Exexp (n,m),n))
 evalsym17 (Exexp (n,Explus (m,o))) -> evalsym17 (Exmult (Exexp (n,m),Exexp (n,o)))
 evalsym17 (Exexp (n,Exmult (m,o))) -> evalsym17 (Exexp (Exexp (n,m),o))
 evalsym17 (Exexp (n,Exexp (m,o))) -> evalsym17 (Exexp (n,dec (Exexp (m,o))))
 dec (Exexp (n,Exz)) -> Exs (Exz)
 dec (Exexp (n,Exs (m))) -> Exmult (Exexp (n,m),n)
 dec (Exexp (n,Explus (m,o))) -> Exmult (Exexp (n,m),Exexp (n,o))
 dec (Exexp (n,Exmult (m,o))) -> dec (Exexp (Exexp (n,m),o))
 dec (Exexp (n,Exexp (m,o))) -> dec (Exexp (n,dec (Exexp (m,o))))
 two -> Exs (Exs (Exz))
 seventeen -> Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exs (Exz))))))))))))))))))))))))
 f (m) -> lambda0 (Exexp (two,m))
)
(VAR REC_M REC_N REC_X REC_Y REC_X1 REC_Y1 REC_X2 REC_Y2)
(RULES
 REC_Not (REC_False) -> REC_True
 REC_Not (REC_True) -> REC_False
 REC_And (REC_False, REC_False) -> REC_False
 REC_And (REC_False, REC_True) -> REC_False
 REC_And (REC_True, REC_False) -> REC_False
 REC_And (REC_True, REC_True) -> REC_True
 REC_Ne (REC_Zero, REC_Zero) -> REC_False
 REC_Ne (REC_Zero, REC_Succ (REC_M)) -> REC_True
 REC_Ne (REC_Succ (REC_M), REC_Zero) -> REC_True
 REC_Ne (REC_Succ (REC_M), REC_Succ (REC_N)) -> REC_Ne (REC_M, REC_N)
 REC_RankBool (true) -> REC_Zero
 REC_EqBool (true, true) -> REC_True
 REC_RankBool (false) -> REC_Succ (REC_Zero)
 REC_EqBool (false, false) -> REC_True
 REC_RankPos (d1) -> REC_Zero
 REC_EqPos (d1, d1) -> REC_True
 REC_RankPos (cDub (REC_X1, REC_X2)) -> REC_Succ (REC_Zero)
 REC_EqPos (cDub (REC_X1, REC_X2), cDub (REC_Y1, REC_Y2)) -> REC_And (REC_EqBool (REC_X1, REC_Y1), REC_EqPos (REC_X2, REC_Y2))
 REC_RankENat (Exz) -> REC_Zero
 REC_EqENat (Exz, Exz) -> REC_True
 REC_RankENat (Exs (REC_X1)) -> REC_Succ (REC_Zero)
 REC_EqENat (Exs (REC_X1), Exs (REC_Y1)) -> REC_EqENat (REC_X1, REC_Y1)
 REC_RankENat (Explus (REC_X1, REC_X2)) -> REC_Succ (REC_Succ (REC_Zero))
 REC_EqENat (Explus (REC_X1, REC_X2), Explus (REC_Y1, REC_Y2)) -> REC_And (REC_EqENat (REC_X1, REC_Y1), REC_EqENat (REC_X2, REC_Y2))
 REC_RankENat (Exmult (REC_X1, REC_X2)) -> REC_Succ (REC_Succ (REC_Succ (REC_Zero)))
 REC_EqENat (Exmult (REC_X1, REC_X2), Exmult (REC_Y1, REC_Y2)) -> REC_And (REC_EqENat (REC_X1, REC_Y1), REC_EqENat (REC_X2, REC_Y2))
 REC_RankENat (Exexp (REC_X1, REC_X2)) -> REC_Succ (REC_Succ (REC_Succ (REC_Succ (REC_Zero))))
 REC_EqENat (Exexp (REC_X1, REC_X2), Exexp (REC_Y1, REC_Y2)) -> REC_And (REC_EqENat (REC_X1, REC_Y1), REC_EqENat (REC_X2, REC_Y2))
 REC_RankSNat (Z) -> REC_Zero
 REC_EqSNat (Z, Z) -> REC_True
 REC_RankSNat (S (REC_X1)) -> REC_Succ (REC_Zero)
 REC_EqSNat (S (REC_X1), S (REC_Y1)) -> REC_EqSNat (REC_X1, REC_Y1)
 REC_EqBool (REC_X, REC_Y) -> REC_False | REC_Ne (REC_RankBool (REC_X), REC_RankBool (REC_Y)) -> REC_True
 REC_EqPos (REC_X, REC_Y) -> REC_False | REC_Ne (REC_RankPos (REC_X), REC_RankPos (REC_Y)) -> REC_True
 REC_EqENat (REC_X, REC_Y) -> REC_False | REC_Ne (REC_RankENat (REC_X), REC_RankENat (REC_Y)) -> REC_True
 REC_EqSNat (REC_X, REC_Y) -> REC_False | REC_Ne (REC_RankSNat (REC_X), REC_RankSNat (REC_Y)) -> REC_True
)
