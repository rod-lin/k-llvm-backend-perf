#include <stdio.h>
#include <stdint.h>

int main ()
{
     uint64_t I, J, K;
     unsigned int I1, I2, I3, I4, I5, I6, I7, I8, I9, I10, I11, I12, I13, I14, I15, I16;
     unsigned int I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28, I29, I30, I31, I32;
     unsigned int J1, J2, J3, J4, J5, J6, J7, J8, J9, J10, J11, J12, J13, J14, J15, J16;
     unsigned int J17, J18, J19, J20, J21, J22, J23, J24, J25, J26, J27, J28, J29, J30, J31, J32;
     unsigned int H, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16;
     unsigned int H17, H18, H19, H20, H21, H22, H23, H24, H25, H26, H27, H28, H29, H30, H31, H32;
     unsigned int L, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16;
     unsigned int L17, L18, L19, L20, L21, L22, L23, L24, L25, L26, L27, L28, L29, L30, L31, L32;

     for (I = 0; (uint64_t) I < (uint64_t) 0xFFFFFFFF; I += 50266112)
	  for (J = 0; (uint64_t) J < (uint64_t) 0xFFFFFFFF; J += 83820541) {
	       I1 = (I & 0x80000000) ? 1 : 0;
	       I2 = (I & 0x40000000) ? 1 : 0;
	       I3 = (I & 0x20000000) ? 1 : 0;
	       I4 = (I & 0x10000000) ? 1 : 0;
	       I5 = (I & 0x8000000) ? 1 : 0;
	       I6 = (I & 0x4000000) ? 1 : 0;
	       I7 = (I & 0x2000000) ? 1 : 0;
	       I8 = (I & 0x1000000) ? 1 : 0;
	       I9 = (I & 0x800000) ? 1 : 0;
	       I10 = (I & 0x400000) ? 1 : 0;
	       I11 = (I & 0x200000) ? 1 : 0;
	       I12 = (I & 0x100000) ? 1 : 0;
	       I13 = (I & 0x80000) ? 1 : 0;
	       I14 = (I & 0x40000) ? 1 : 0;
	       I15 = (I & 0x20000) ? 1 : 0;
	       I16 = (I & 0x10000) ? 1 : 0;
	       I17 = (I & 32768) ? 1 : 0;
	       I18 = (I & 16384) ? 1 : 0;
	       I19 = (I & 8192) ? 1 : 0;
	       I20 = (I & 4096) ? 1 : 0;
	       I21 = (I & 2048) ? 1 : 0;
	       I22 = (I & 1024) ? 1 : 0;
	       I23 = (I & 512) ? 1 : 0;
	       I24 = (I & 256) ? 1 : 0;
	       I25 = (I & 128) ? 1 : 0;
	       I26 = (I & 64) ? 1 : 0;
	       I27 = (I & 32) ? 1 : 0;
	       I28 = (I & 16) ? 1 : 0;
	       I29 = (I & 8) ? 1 : 0;
	       I30 = (I & 4) ? 1 : 0;
	       I31 = (I & 2) ? 1 : 0;
	       I32 = (I & 1) ? 1 : 0;

	       J1 = (J & 0x80000000) ? 1 : 0;
	       J2 = (J & 0x40000000) ? 1 : 0;
	       J3 = (J & 0x20000000) ? 1 : 0;
	       J4 = (J & 0x10000000) ? 1 : 0;
	       J5 = (J & 0x8000000) ? 1 : 0;
	       J6 = (J & 0x4000000) ? 1 : 0;
	       J7 = (J & 0x2000000) ? 1 : 0;
	       J8 = (J & 0x1000000) ? 1 : 0;
	       J9 = (J & 0x800000) ? 1 : 0;
	       J10 = (J & 0x400000) ? 1 : 0;
	       J11 = (J & 0x200000) ? 1 : 0;
	       J12 = (J & 0x100000) ? 1 : 0;
	       J13 = (J & 0x80000) ? 1 : 0;
	       J14 = (J & 0x40000) ? 1 : 0;
	       J15 = (J & 0x20000) ? 1 : 0;
	       J16 = (J & 0x10000) ? 1 : 0;
	       J17 = (J & 32768) ? 1 : 0;
	       J18 = (J & 16384) ? 1 : 0;
	       J19 = (J & 8192) ? 1 : 0;
	       J20 = (J & 4096) ? 1 : 0;
	       J21 = (J & 2048) ? 1 : 0;
	       J22 = (J & 1024) ? 1 : 0;
	       J23 = (J & 512) ? 1 : 0;
	       J24 = (J & 256) ? 1 : 0;
	       J25 = (J & 128) ? 1 : 0;
	       J26 = (J & 64) ? 1 : 0;
	       J27 = (J & 32) ? 1 : 0;
	       J28 = (J & 16) ? 1 : 0;
	       J29 = (J & 8) ? 1 : 0;
	       J30 = (J & 4) ? 1 : 0;
	       J31 = (J & 2) ? 1 : 0;
	       J32 = (J & 1) ? 1 : 0;

	       K = (uint64_t) (I * J);
	       H = (K >> 32) & 0xFFFFFFFF;

	       H1 = (H & 0x80000000) ? 1 : 0;
	       H2 = (H & 0x40000000) ? 1 : 0;
	       H3 = (H & 0x20000000) ? 1 : 0;
	       H4 = (H & 0x10000000) ? 1 : 0;
	       H5 = (H & 0x8000000) ? 1 : 0;
	       H6 = (H & 0x4000000) ? 1 : 0;
	       H7 = (H & 0x2000000) ? 1 : 0;
	       H8 = (H & 0x1000000) ? 1 : 0;
	       H9 = (H & 0x800000) ? 1 : 0;
	       H10 = (H & 0x400000) ? 1 : 0;
	       H11 = (H & 0x200000) ? 1 : 0;
	       H12 = (H & 0x100000) ? 1 : 0;
	       H13 = (H & 0x80000) ? 1 : 0;
	       H14 = (H & 0x40000) ? 1 : 0;
	       H15 = (H & 0x20000) ? 1 : 0;
	       H16 = (H & 0x10000) ? 1 : 0;
	       H17 = (H & 32768) ? 1 : 0;
	       H18 = (H & 16384) ? 1 : 0;
	       H19 = (H & 8192) ? 1 : 0;
	       H20 = (H & 4096) ? 1 : 0;
	       H21 = (H & 2048) ? 1 : 0;
	       H22 = (H & 1024) ? 1 : 0;
	       H23 = (H & 512) ? 1 : 0;
	       H24 = (H & 256) ? 1 : 0;
	       H25 = (H & 128) ? 1 : 0;
	       H26 = (H & 64) ? 1 : 0;
	       H27 = (H & 32) ? 1 : 0;
	       H28 = (H & 16) ? 1 : 0;
	       H29 = (H & 8) ? 1 : 0;
	       H30 = (H & 4) ? 1 : 0;
	       H31 = (H & 2) ? 1 : 0;
	       H32 = (H & 1) ? 1 : 0;

	       L = K & 0xFFFFFFFF;

	       L1 = (L & 0x80000000) ? 1 : 0;
	       L2 = (L & 0x40000000) ? 1 : 0;
	       L3 = (L & 0x20000000) ? 1 : 0;
	       L4 = (L & 0x10000000) ? 1 : 0;
	       L5 = (L & 0x8000000) ? 1 : 0;
	       L6 = (L & 0x4000000) ? 1 : 0;
	       L7 = (L & 0x2000000) ? 1 : 0;
	       L8 = (L & 0x1000000) ? 1 : 0;
	       L9 = (L & 0x800000) ? 1 : 0;
	       L10 = (L & 0x400000) ? 1 : 0;
	       L11 = (L & 0x200000) ? 1 : 0;
	       L12 = (L & 0x100000) ? 1 : 0;
	       L13 = (L & 0x80000) ? 1 : 0;
	       L14 = (L & 0x40000) ? 1 : 0;
	       L15 = (L & 0x20000) ? 1 : 0;
	       L16 = (L & 0x10000) ? 1 : 0;
	       L17 = (L & 32768) ? 1 : 0;
	       L18 = (L & 16384) ? 1 : 0;
	       L19 = (L & 8192) ? 1 : 0;
	       L20 = (L & 4096) ? 1 : 0;
	       L21 = (L & 2048) ? 1 : 0;
	       L22 = (L & 1024) ? 1 : 0;
	       L23 = (L & 512) ? 1 : 0;
	       L24 = (L & 256) ? 1 : 0;
	       L25 = (L & 128) ? 1 : 0;
	       L26 = (L & 64) ? 1 : 0;
	       L27 = (L & 32) ? 1 : 0;
	       L28 = (L & 16) ? 1 : 0;
	       L29 = (L & 8) ? 1 : 0;
	       L30 = (L & 4) ? 1 : 0;
	       L31 = (L & 2) ? 1 : 0;
	       L32 = (L & 1) ? 1 : 0;
	       printf
		   ("get normal form for: testMulBlock (buildBlock (buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X)), buildBlock (buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X)), buildBlock (buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X)), buildBlock (buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X), buildOctet (x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X, x%1X)))\n\n",
		    I1, I2, I3, I4, I5, I6, I7, I8, I9, I10, I11, I12, I13, I14, I15, I16, I17, I18, I19, I20, I21, I22, I23, I24, I25, I26, I27, I28, I29, I30, I31, I32, J1, J2, J3, J4, J5, J6, J7, J8, J9, J10, J11, J12, J13, J14, J15, J16, J17, J18, J19, J20, J21, J22, J23, J24, J25, J26, J27, J28, J29, J30, J31, J32, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20, H21, H22, H23, H24, H25, H26, H27, H28, H29, H30, H31, H32, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25, L26, L27, L28, L29, L30, L31, L32);
	  }
}
