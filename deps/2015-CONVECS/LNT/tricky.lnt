module Tricky is

type NSingleton is 
   Ncons
with "==", "!="
end type

type USingleton is 
   Ucons (rec_x1_1:Xnat)
with "==", "!="
end type

type Xnat is 
   d0,
   succ (rec_x1_1:Xnat)
with "==", "!="
end type

function d1 : Xnat is
   return succ (d0)
end function

function d2 : Xnat is
   case 0 of NAT in
     any where (d0 == d0) -> return d0
   end case
end function

function d3 : Xnat is
   case 0 of NAT in
     any where (d0 != d0) -> return d0
   | any where (succ (d0) == d0) -> return d0
   | any where (succ (d0) != d0) -> return succ (d0)
   end case
end function

function f (rec_x1:Xnat) : Xnat is
   case rec_x1 in
   var N:Xnat in
     N where (N != d0) and (N != succ (d0)) -> return N
   end case
end function

process MAIN [PRINT:any] is
   PRINT (Ncons);
   PRINT (Ucons (d0));
   PRINT (d1);
   PRINT (d2);
   PRINT (d3);
   stop
end process

end module
