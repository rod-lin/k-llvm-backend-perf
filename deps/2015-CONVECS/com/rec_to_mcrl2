#! /bin/sh

# Hubert Garavel -- quick-and-dirty REC translator to mCRL2
# this script translates FILE.rec into FILE.mcrl2

DIR=`dirname "$0"`
COMMAND=`basename "$0"`

if [ $# -ne 1 ]
then
	echo "$COMMAND: one argument expected"
	exit 1
fi

if [ -f "$1" ]
then
	INPUT="$1"
elif [ -f "$1.rec" ]
then
	INPUT="$1.rec"
else
	echo "$COMMAND: cannot read $1"
	exit 1
fi

OUTPUT=`basename "$INPUT" .rec`.mcrl2

# ----------------------------------------------------------------------------

NORMED=`mktemp -t "rec_XXXXXXXXXX"`

TYPE_FILE=`mktemp -t "rec_XXXXXXXXXX"`

EVAL_FILE=`mktemp -t "rec_XXXXXXXXXX"`

SCRIPT=`mktemp -t "rec_XXXXXXXXXX"`

# ----------------------------------------------------------------------------

# etape 0 : normalisation

sh $DIR/rec_normalize -mcrl2 "$INPUT" > "$NORMED"

# ----------------------------------------------------------------------------

# etape 1a : construction de $TYPE_FILE

sh $DIR/rec_type -build "$NORMED" "$TYPE_FILE"
# cat $TYPE_FILE ; exit

# ----------------------------------------------------------------------------

# etape 1b : construction de $SCRIPT

cat > "$SCRIPT" << \EOF
#! /bin/sh
sed -e 's+[ ]*-><-[ ]*+ == +g' | 
sed -e 's+[ ]*->/<-[ ]*+ != +g' |
sed -e 's+[ ]*\<and-if\>[ ]*+ \&\& +g' |
cat
EOF

# ----------------------------------------------------------------------------

# etape 2 : traduction en mCRL2

cat "$NORMED" |
awk -v "DIR=$DIR" -v "TYPE_FILE=$TYPE_FILE" -v "EVAL_FILE=$EVAL_FILE" \
    -v "SCRIPT=$SCRIPT" -f $DIR/to_mcrl2_1.awk > $OUTPUT

rm "$NORMED" "$TYPE_FILE" "$SCRIPT"

# ----------------------------------------------------------------------------

